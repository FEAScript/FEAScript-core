"use strict";function e(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n]*e[n];return t=Math.sqrt(t),t}Object.defineProperty(exports,"__esModule",{value:!0});let t="basic";function n(e){"debug"===t&&console.log("%c[DEBUG] "+e,"color: #2196F3; font-weight: bold;")}function o(e){console.log("%c[INFO] "+e,"color: #4CAF50; font-weight: bold;")}function s(e){console.log("%c[ERROR] "+e,"color: #F44336; font-weight: bold;")}function i(e,t,i,r={}){const{maxIterations:a=1e3,tolerance:l=1e-6}=r;let d=[],c=!0,u=0;if(o(`Solving system using ${e}...`),console.time("systemSolving"),"lusolve"===e){const e=math.sparse(t),n=math.slu(e,1,1);let o=math.lusolve(n,i);d=math.squeeze(o).valueOf()}else if("jacobi"===e){const e=function(e,t,n,o={}){const{maxIterations:s=1e3,tolerance:i=1e-6}=o,r=e.length;let a=[...n],l=new Array(r);for(let n=0;n<s;n++){for(let n=0;n<r;n++){let o=0;for(let t=0;t<r;t++)t!==n&&(o+=e[n][t]*a[t]);l[n]=(t[n]-o)/e[n][n]}let o=0;for(let e=0;e<r;e++)o=Math.max(o,Math.abs(l[e]-a[e]));if(a=[...l],o<i)return{solutionVector:a,iterations:n+1,converged:!0}}return{solutionVector:a,iterations:s,converged:!1}}(t,i,new Array(i.length).fill(0),{maxIterations:a,tolerance:l});e.converged?n(`Jacobi method converged in ${e.iterations} iterations`):n(`Jacobi method did not converge after ${e.iterations} iterations`),d=e.solutionVector,c=e.converged,u=e.iterations}else s(`Unknown solver method: ${e}`);return console.timeEnd("systemSolving"),o("System solved successfully"),{solutionVector:d,converged:c,iterations:u}}function r(t,n,r=100,a=1e-4){let l=0,d=!1,c=0,u=[],h=[],m=[],f=[],p=n.meshData.nodesXCoordinates.length;for(let e=0;e<p;e++)u[e]=0,h[e]=0;for(n.initialSolution&&n.initialSolution.length===p&&(h=[...n.initialSolution]);c<r&&!d;){for(let e=0;e<h.length;e++)h[e]=Number(h[e])+Number(u[e]);({jacobianMatrix:m,residualVector:f}=t(n.meshData,n.boundaryConditions,h,n.eikonalActivationFlag));if(u=i(n.solverMethod,m,f).solutionVector,l=e(u),o(`Newton-Raphson iteration ${c+1}: Error norm = ${l.toExponential(4)}`),l<=a)d=!0;else if(l>100){s(`Solution not converged. Error norm: ${l}`);break}c++}return{solutionVector:h,converged:d,iterations:c,jacobianMatrix:m,residualVector:f}}class a{constructor({meshDimension:e,elementOrder:t}){this.meshDimension=e,this.elementOrder=t}getBasisFunctions(e,t=null){let n=[],o=[],i=[];if("1D"===this.meshDimension)"linear"===this.elementOrder?(n[0]=1-e,n[1]=e,o[0]=-1,o[1]=1):"quadratic"===this.elementOrder&&(n[0]=1-3*e+2*e**2,n[1]=4*e-4*e**2,n[2]=2*e**2-e,o[0]=4*e-3,o[1]=4-8*e,o[2]=4*e-1);else if("2D"===this.meshDimension){if(null===t)return void s("Eta coordinate is required for 2D elements");if("linear"===this.elementOrder){function r(e){return 1-e}n[0]=r(e)*r(t),n[1]=r(e)*t,n[2]=e*r(t),n[3]=e*t,o[0]=-1*r(t),o[1]=-1*t,o[2]=1*r(t),o[3]=1*t,i[0]=-1*r(e),i[1]=1*r(e),i[2]=-1*e,i[3]=1*e}else if("quadratic"===this.elementOrder){function a(e){return 2*e**2-3*e+1}function l(e){return-4*e**2+4*e}function d(e){return 2*e**2-e}function c(e){return 4*e-3}function u(e){return-8*e+4}function h(e){return 4*e-1}n[0]=a(e)*a(t),n[1]=a(e)*l(t),n[2]=a(e)*d(t),n[3]=l(e)*a(t),n[4]=l(e)*l(t),n[5]=l(e)*d(t),n[6]=d(e)*a(t),n[7]=d(e)*l(t),n[8]=d(e)*d(t),o[0]=c(e)*a(t),o[1]=c(e)*l(t),o[2]=c(e)*d(t),o[3]=u(e)*a(t),o[4]=u(e)*l(t),o[5]=u(e)*d(t),o[6]=h(e)*a(t),o[7]=h(e)*l(t),o[8]=h(e)*d(t),i[0]=a(e)*c(t),i[1]=a(e)*u(t),i[2]=a(e)*h(t),i[3]=l(e)*c(t),i[4]=l(e)*u(t),i[5]=l(e)*h(t),i[6]=d(e)*c(t),i[7]=d(e)*u(t),i[8]=d(e)*h(t)}}return{basisFunction:n,basisFunctionDerivKsi:o,basisFunctionDerivEta:i}}}class l{constructor({numElementsX:e=null,maxX:t=null,numElementsY:n=null,maxY:s=null,meshDimension:i=null,elementOrder:r="linear",parsedMesh:a=null}){this.numElementsX=e,this.numElementsY=n,this.maxX=t,this.maxY=s,this.meshDimension=i,this.elementOrder=r,this.parsedMesh=a,this.boundaryElementsProcessed=!1,this.parsedMesh&&(o("Using pre-parsed mesh from gmshReader data for mesh generation."),this.parseMeshFromGmsh())}parseMeshFromGmsh(){if(this.parsedMesh.nodalNumbering||s("No valid nodal numbering found in the parsed mesh."),"object"==typeof this.parsedMesh.nodalNumbering&&!Array.isArray(this.parsedMesh.nodalNumbering)){const e=this.parsedMesh.nodalNumbering.quadElements||[];if(this.parsedMesh.nodalNumbering.triangleElements,n("Initial parsed mesh nodal numbering from GMSH format: "+JSON.stringify(this.parsedMesh.nodalNumbering)),this.parsedMesh.elementTypes[3]||this.parsedMesh.elementTypes[10]){const t=[];for(let n=0;n<e.length;n++){const o=e[n],s=new Array(o.length);4===o.length?(s[0]=o[0],s[1]=o[3],s[2]=o[1],s[3]=o[2]):9===o.length&&(s[0]=o[0],s[1]=o[7],s[2]=o[3],s[3]=o[4],s[4]=o[8],s[5]=o[6],s[6]=o[1],s[7]=o[5],s[8]=o[2]),t.push(s)}this.parsedMesh.nodalNumbering=t}else this.parsedMesh.elementTypes[2]&&s("Element type is neither triangle nor quad; mapping for this type is not implemented yet.");if(n("Nodal numbering after mapping from GMSH to FEAScript format: "+JSON.stringify(this.parsedMesh.nodalNumbering)),this.parsedMesh.physicalPropMap&&this.parsedMesh.boundaryElements){if(Array.isArray(this.parsedMesh.boundaryElements)&&this.parsedMesh.boundaryElements.length>0&&void 0===this.parsedMesh.boundaryElements[0]){const e=[];for(let t=1;t<this.parsedMesh.boundaryElements.length;t++)this.parsedMesh.boundaryElements[t]&&e.push(this.parsedMesh.boundaryElements[t]);this.parsedMesh.boundaryElements=e}if(this.parsedMesh.boundaryNodePairs&&!this.parsedMesh.boundaryElementsProcessed&&(this.parsedMesh.boundaryElements=[],this.parsedMesh.physicalPropMap.forEach((e=>{if(1===e.dimension){const t=this.parsedMesh.boundaryNodePairs[e.tag]||[];t.length>0&&(this.parsedMesh.boundaryElements[e.tag]||(this.parsedMesh.boundaryElements[e.tag]=[]),t.forEach((t=>{const o=t[0],i=t[1];n(`Processing boundary node pair: [${o}, ${i}] for boundary ${e.tag} (${e.name||"unnamed"})`);let r=!1;for(let t=0;t<this.parsedMesh.nodalNumbering.length;t++){const s=this.parsedMesh.nodalNumbering[t];if(4===s.length){if(s.includes(o)&&s.includes(i)){let a;const l=s.indexOf(o),d=s.indexOf(i);n(`  Found element ${t} containing boundary nodes. Element nodes: [${s.join(", ")}]`),n(`  Node ${o} is at index ${l}, Node ${i} is at index ${d} in the element`),0===l&&2===d||2===l&&0===d?(a=0,n(`  These nodes form the BOTTOM side (${a}) of element ${t}`)):0===l&&1===d||1===l&&0===d?(a=1,n(`  These nodes form the LEFT side (${a}) of element ${t}`)):1===l&&3===d||3===l&&1===d?(a=2,n(`  These nodes form the TOP side (${a}) of element ${t}`)):(2===l&&3===d||3===l&&2===d)&&(a=3,n(`  These nodes form the RIGHT side (${a}) of element ${t}`)),this.parsedMesh.boundaryElements[e.tag].push([t,a]),n(`  Added element-side pair [${t}, ${a}] to boundary tag ${e.tag}`),r=!0;break}}else if(9===s.length&&s.includes(o)&&s.includes(i)){let a;const l=s.indexOf(o),d=s.indexOf(i);n(`  Found element ${t} containing boundary nodes. Element nodes: [${s.join(", ")}]`),n(`  Node ${o} is at index ${l}, Node ${i} is at index ${d} in the element`),0===l&&6===d||6===l&&0===d||0===l&&3===d||3===l&&0===d||3===l&&6===d||6===l&&3===d?(a=0,n(`  These nodes form the BOTTOM side (${a}) of element ${t}`)):0===l&&2===d||2===l&&0===d||0===l&&1===d||1===l&&0===d||1===l&&2===d||2===l&&1===d?(a=1,n(`  These nodes form the LEFT side (${a}) of element ${t}`)):2===l&&8===d||8===l&&2===d||2===l&&5===d||5===l&&2===d||5===l&&8===d||8===l&&5===d?(a=2,n(`  These nodes form the TOP side (${a}) of element ${t}`)):(6===l&&8===d||8===l&&6===d||6===l&&7===d||7===l&&6===d||7===l&&8===d||8===l&&7===d)&&(a=3,n(`  These nodes form the RIGHT side (${a}) of element ${t}`)),this.parsedMesh.boundaryElements[e.tag].push([t,a]),n(`  Added element-side pair [${t}, ${a}] to boundary tag ${e.tag}`),r=!0;break}}r||s(`Could not find element containing boundary nodes ${o} and ${i}. Boundary may be incomplete.`)})))}})),this.boundaryElementsProcessed=!0,this.parsedMesh.boundaryElements.length>0&&void 0===this.parsedMesh.boundaryElements[0])){const e=[];for(let t=1;t<this.parsedMesh.boundaryElements.length;t++)this.parsedMesh.boundaryElements[t]&&e.push(this.parsedMesh.boundaryElements[t]);this.parsedMesh.boundaryElements=e}}}return this.parsedMesh}}class d extends l{constructor({numElementsX:e=null,maxX:t=null,elementOrder:n="linear",parsedMesh:o=null}){super({numElementsX:e,maxX:t,numElementsY:1,maxY:0,meshDimension:"1D",elementOrder:n,parsedMesh:o}),null!==this.numElementsX&&null!==this.maxX||s("numElementsX and maxX are required parameters when generating a 1D mesh from geometry")}generateMesh(){let e=[];let t,o;if("linear"===this.elementOrder){t=this.numElementsX+1,o=(this.maxX-0)/this.numElementsX,e[0]=0;for(let n=1;n<t;n++)e[n]=e[n-1]+o}else if("quadratic"===this.elementOrder){t=2*this.numElementsX+1,o=(this.maxX-0)/this.numElementsX,e[0]=0;for(let n=1;n<t;n++)e[n]=e[n-1]+o/2}const s=this.generate1DNodalNumbering(this.numElementsX,t,this.elementOrder),i=this.findBoundaryElements();return n("Generated node X coordinates: "+JSON.stringify(e)),{nodesXCoordinates:e,totalNodesX:t,nodalNumbering:s,boundaryElements:i}}generate1DNodalNumbering(e,t,n){let o=[];if("linear"===n)for(let t=0;t<e;t++){o[t]=[];for(let e=1;e<=2;e++)o[t][e-1]=t+e}else if("quadratic"===n){let t=0;for(let n=0;n<e;n++){o[n]=[];for(let e=1;e<=3;e++)o[n][e-1]=n+e+t;t+=1}}return o}findBoundaryElements(){const e=[];for(let t=0;t<2;t++)e.push([]);return e[0].push([0,0]),e[1].push([this.numElementsX-1,1]),n("Identified boundary elements by side: "+JSON.stringify(e)),this.boundaryElementsProcessed=!0,e}}class c extends l{constructor({numElementsX:e=null,maxX:t=null,numElementsY:n=null,maxY:o=null,elementOrder:i="linear",parsedMesh:r=null}){super({numElementsX:e,maxX:t,numElementsY:n,maxY:o,meshDimension:"2D",elementOrder:i,parsedMesh:r}),r||null!==this.numElementsX&&null!==this.maxX&&null!==this.numElementsY&&null!==this.maxY||s("numElementsX, maxX, numElementsY, and maxY are required parameters when generating a 2D mesh from geometry")}generateMesh(){let e=[],t=[];let o,s,i,r;if("linear"===this.elementOrder){o=this.numElementsX+1,s=this.numElementsY+1,i=(this.maxX-0)/this.numElementsX,r=(this.maxY-0)/this.numElementsY,e[0]=0,t[0]=0;for(let n=1;n<s;n++)e[n]=e[0],t[n]=t[0]+n*r;for(let n=1;n<o;n++){const o=n*s;e[o]=e[0]+n*i,t[o]=t[0];for(let n=1;n<s;n++)e[o+n]=e[o],t[o+n]=t[o]+n*r}}else if("quadratic"===this.elementOrder){o=2*this.numElementsX+1,s=2*this.numElementsY+1,i=(this.maxX-0)/this.numElementsX,r=(this.maxY-0)/this.numElementsY,e[0]=0,t[0]=0;for(let n=1;n<s;n++)e[n]=e[0],t[n]=t[0]+n*r/2;for(let n=1;n<o;n++){const o=n*s;e[o]=e[0]+n*i/2,t[o]=t[0];for(let n=1;n<s;n++)e[o+n]=e[o],t[o+n]=t[o]+n*r/2}}const a=this.generate2DNodalNumbering(this.numElementsX,this.numElementsY,s,this.elementOrder),l=this.findBoundaryElements();return n("Generated node X coordinates: "+JSON.stringify(e)),n("Generated node Y coordinates: "+JSON.stringify(t)),{nodesXCoordinates:e,nodesYCoordinates:t,totalNodesX:o,totalNodesY:s,nodalNumbering:a,boundaryElements:l}}generate2DNodalNumbering(e,t,n,o){let s=0,i=[];if("linear"===o){let n=0,o=2;for(let s=0;s<e*t;s++)n+=1,i[s]=[],i[s][0]=s+o-1,i[s][1]=s+o,i[s][2]=s+o+t,i[s][3]=s+o+t+1,n===t&&(o+=1,n=0)}else if("quadratic"===o)for(let o=1;o<=e;o++)for(let e=1;e<=t;e++){i[s]=[];for(let t=1;t<=3;t++){let r=3*t-2;i[s][r-1]=n*(2*o+t-3)+2*e-1,i[s][r]=i[s][r-1]+1,i[s][r+1]=i[s][r-1]+2}s+=1}return i}findBoundaryElements(){const e=[];for(let t=0;t<4;t++)e.push([]);for(let t=0;t<this.numElementsX;t++)for(let n=0;n<this.numElementsY;n++){const o=t*this.numElementsY+n;0===n&&e[0].push([o,0]),0===t&&e[1].push([o,1]),n===this.numElementsY-1&&e[2].push([o,2]),t===this.numElementsX-1&&e[3].push([o,3])}return n("Identified boundary elements by side: "+JSON.stringify(e)),this.boundaryElementsProcessed=!0,e}}class u{constructor({meshDimension:e,elementOrder:t}){this.meshDimension=e,this.elementOrder=t}getGaussPointsAndWeights(){let e=[],t=[];return"linear"===this.elementOrder?(e[0]=.5,t[0]=1):"quadratic"===this.elementOrder&&(e[0]=(1-Math.sqrt(.6))/2,e[1]=.5,e[2]=(1+Math.sqrt(.6))/2,t[0]=5/18,t[1]=8/18,t[2]=5/18),{gaussPoints:e,gaussWeights:t}}}function h(e){const{totalNodes:t,nop:n,meshDimension:o,elementOrder:s}=e;let i=[],r=[];for(let e=0;e<t;e++){i[e]=0,r.push([]);for(let n=0;n<t;n++)r[e][n]=0}const l=new a({meshDimension:o,elementOrder:s});let d=new u({meshDimension:o,elementOrder:s}).getGaussPointsAndWeights();return{residualVector:i,jacobianMatrix:r,localToGlobalMap:[],basisFunctions:l,gaussPoints:d.gaussPoints,gaussWeights:d.gaussWeights,numNodes:n[0].length}}function m(e){const{basisFunction:t,basisFunctionDerivKsi:n,nodesXCoordinates:o,localToGlobalMap:s,numNodes:i}=e;let r=0,a=0;for(let e=0;e<i;e++)r+=o[s[e]]*t[e],a+=o[s[e]]*n[e];let l=a,d=[];for(let e=0;e<i;e++)d[e]=n[e]/l;return{xCoordinates:r,detJacobian:l,basisFunctionDerivX:d}}function f(e){const{basisFunction:t,basisFunctionDerivKsi:n,basisFunctionDerivEta:o,nodesXCoordinates:s,nodesYCoordinates:i,localToGlobalMap:r,numNodes:a}=e;let l=0,d=0,c=0,u=0,h=0,m=0;for(let e=0;e<a;e++)l+=s[r[e]]*t[e],d+=i[r[e]]*t[e],c+=s[r[e]]*n[e],u+=s[r[e]]*o[e],h+=i[r[e]]*n[e],m+=i[r[e]]*o[e];let f=c*m-u*h,p=[],y=[];for(let e=0;e<a;e++)p[e]=(m*n[e]-h*o[e])/f,y[e]=(c*o[e]-u*n[e])/f;return{xCoordinates:l,yCoordinates:d,detJacobian:f,basisFunctionDerivX:p,basisFunctionDerivY:y}}class p{constructor(e,t,n,o,s){this.boundaryConditions=e,this.boundaryElements=t,this.nop=n,this.meshDimension=o,this.elementOrder=s}imposeConstantValueBoundaryConditions(e,t){o("Applying constant value boundary conditions"),"1D"===this.meshDimension?Object.keys(this.boundaryConditions).forEach((o=>{if("constantValue"===this.boundaryConditions[o][0]){const s=this.boundaryConditions[o][1];n(`Boundary ${o}: Applying constant value of ${s} (Dirichlet condition)`),this.boundaryElements[o].forEach((([o,i])=>{if("linear"===this.elementOrder){({0:[0],1:[1]})[i].forEach((i=>{const r=this.nop[o][i]-1;n(`  - Applied constant value to node ${r+1} (element ${o+1}, local node ${i+1})`),e[r]=s;for(let n=0;n<e.length;n++)t[r][n]=0;t[r][r]=1}))}else if("quadratic"===this.elementOrder){({0:[0],2:[2]})[i].forEach((i=>{const r=this.nop[o][i]-1;n(`  - Applied constant value to node ${r+1} (element ${o+1}, local node ${i+1})`),e[r]=s;for(let n=0;n<e.length;n++)t[r][n]=0;t[r][r]=1}))}}))}})):"2D"===this.meshDimension&&Object.keys(this.boundaryConditions).forEach((o=>{if("constantValue"===this.boundaryConditions[o][0]){const s=this.boundaryConditions[o][1];n(`Boundary ${o}: Applying constant value of ${s} (Dirichlet condition)`),this.boundaryElements[o].forEach((([o,i])=>{if("linear"===this.elementOrder){({0:[0,2],1:[0,1],2:[1,3],3:[2,3]})[i].forEach((i=>{const r=this.nop[o][i]-1;n(`  - Applied constant value to node ${r+1} (element ${o+1}, local node ${i+1})`),e[r]=s;for(let n=0;n<e.length;n++)t[r][n]=0;t[r][r]=1}))}else if("quadratic"===this.elementOrder){({0:[0,3,6],1:[0,1,2],2:[2,5,8],3:[6,7,8]})[i].forEach((i=>{const r=this.nop[o][i]-1;n(`  - Applied constant value to node ${r+1} (element ${o+1}, local node ${i+1})`),e[r]=s;for(let n=0;n<e.length;n++)t[r][n]=0;t[r][r]=1}))}}))}}))}}function y(e,t,s,i){o("Starting front propagation matrix assembly...");let r=1-i+.01;o(`eikonalViscousTerm: ${r}`),o(`eikonalActivationFlag: ${i}`);const{nodesXCoordinates:a,nodesYCoordinates:l,nop:d,boundaryElements:c,totalElements:u,meshDimension:y,elementOrder:g}=e,b=h(e),{residualVector:E,jacobianMatrix:v,localToGlobalMap:M,basisFunctions:$,gaussPoints:x,gaussWeights:C,numNodes:F}=b;for(let e=0;e<u;e++){for(let t=0;t<F;t++)M[t]=d[e][t]-1;for(let e=0;e<x.length;e++)if("1D"===y){let t=$.getBasisFunctions(x[e]);const n=m({basisFunction:t.basisFunction,basisFunctionDerivKsi:t.basisFunctionDerivKsi,nodesXCoordinates:a,localToGlobalMap:M,numNodes:F}),{detJacobian:o,basisFunctionDerivX:i}=n;t.basisFunction;let r=0;for(let e=0;e<F;e++)r+=s[M[e]]*i[e];for(let e=0;e<F;e++){M[e];for(let e=0;e<F;e++)M[e]}}else if("2D"===y)for(let t=0;t<x.length;t++){let n=$.getBasisFunctions(x[e],x[t]);const o=f({basisFunction:n.basisFunction,basisFunctionDerivKsi:n.basisFunctionDerivKsi,basisFunctionDerivEta:n.basisFunctionDerivEta,nodesXCoordinates:a,nodesYCoordinates:l,localToGlobalMap:M,numNodes:F}),{detJacobian:d,basisFunctionDerivX:c,basisFunctionDerivY:u}=o,h=n.basisFunction;let m=0,p=0;for(let e=0;e<F;e++)m+=s[M[e]]*c[e],p+=s[M[e]]*u[e];for(let n=0;n<F;n++){let o=M[n];E[o]+=r*C[e]*C[t]*d*c[n]*m+r*C[e]*C[t]*d*u[n]*p,0!==i&&(E[o]+=i*(C[e]*C[t]*d*h[n]*Math.sqrt(m**2+p**2)-C[e]*C[t]*d*h[n]));for(let s=0;s<F;s++){let a=M[s];v[o][a]+=-r*C[e]*C[t]*d*(c[n]*c[s]+u[n]*u[s]),0!==i&&(v[o][a]+=i*(-d*m*h[n]*C[e]*C[t]/Math.sqrt(m**2+p**2+1e-8))*c[s]-d*p*h[n]*C[e]*C[t]/Math.sqrt(m**2+p**2+1e-8)*u[s])}}}}o("Applying generic boundary conditions...");new p(t,c,d,y,g).imposeConstantValueBoundaryConditions(E,v),o("Constant value boundary conditions applied"),n("Residuals at each node:");for(let e=0;e<E.length;e++)n(`Node ${e}: ${E[e].toExponential(6)}`);return o("Front propagation matrix assembly completed"),{jacobianMatrix:v,residualVector:E}}class g{constructor(e,t,n,o,s){this.boundaryConditions=e,this.boundaryElements=t,this.nop=n,this.meshDimension=o,this.elementOrder=s}imposeConstantTempBoundaryConditions(e,t){o("Applying constant temperature boundary conditions"),"1D"===this.meshDimension?Object.keys(this.boundaryConditions).forEach((o=>{if("constantTemp"===this.boundaryConditions[o][0]){const s=this.boundaryConditions[o][1];n(`Boundary ${o}: Applying constant temperature of ${s} K (Dirichlet condition)`),this.boundaryElements[o].forEach((([o,i])=>{if("linear"===this.elementOrder){({0:[0],1:[1]})[i].forEach((i=>{const r=this.nop[o][i]-1;n(`  - Applied constant temperature to node ${r+1} (element ${o+1}, local node ${i+1})`),e[r]=s;for(let n=0;n<e.length;n++)t[r][n]=0;t[r][r]=1}))}else if("quadratic"===this.elementOrder){({0:[0],2:[2]})[i].forEach((i=>{const r=this.nop[o][i]-1;n(`  - Applied constant temperature to node ${r+1} (element ${o+1}, local node ${i+1})`),e[r]=s;for(let n=0;n<e.length;n++)t[r][n]=0;t[r][r]=1}))}}))}})):"2D"===this.meshDimension&&Object.keys(this.boundaryConditions).forEach((o=>{if("constantTemp"===this.boundaryConditions[o][0]){const s=this.boundaryConditions[o][1];n(`Boundary ${o}: Applying constant temperature of ${s} K (Dirichlet condition)`),this.boundaryElements[o].forEach((([o,i])=>{if("linear"===this.elementOrder){({0:[0,2],1:[0,1],2:[1,3],3:[2,3]})[i].forEach((i=>{const r=this.nop[o][i]-1;n(`  - Applied constant temperature to node ${r+1} (element ${o+1}, local node ${i+1})`),e[r]=s;for(let n=0;n<e.length;n++)t[r][n]=0;t[r][r]=1}))}else if("quadratic"===this.elementOrder){({0:[0,3,6],1:[0,1,2],2:[2,5,8],3:[6,7,8]})[i].forEach((i=>{const r=this.nop[o][i]-1;n(`  - Applied constant temperature to node ${r+1} (element ${o+1}, local node ${i+1})`),e[r]=s;for(let n=0;n<e.length;n++)t[r][n]=0;t[r][r]=1}))}}))}}))}imposeConvectionBoundaryConditions(e,t,s,i,r,a,l){o("Applying convection boundary conditions");let d=[],c=[];Object.keys(this.boundaryConditions).forEach((e=>{const t=this.boundaryConditions[e];"convection"===t[0]&&(d[e]=t[1],c[e]=t[2])})),"1D"===this.meshDimension?Object.keys(this.boundaryConditions).forEach((o=>{if("convection"===this.boundaryConditions[o][0]){const s=d[o],i=c[o];n(`Boundary ${o}: Applying convection with heat transfer coefficient h=${s} W/(m²·K) and external temperature T∞=${i} K`),this.boundaryElements[o].forEach((([o,r])=>{let a;"linear"===this.elementOrder?a=0===r?0:1:"quadratic"===this.elementOrder&&(a=0===r?0:2);const l=this.nop[o][a]-1;n(`  - Applied convection boundary condition to node ${l+1} (element ${o+1}, local node ${a+1})`),e[l]+=-s*i,t[l][l]+=s}))}})):"2D"===this.meshDimension&&Object.keys(this.boundaryConditions).forEach((o=>{if("convection"===this.boundaryConditions[o][0]){const u=d[o],h=c[o];n(`Boundary ${o}: Applying convection with heat transfer coefficient h=${u} W/(m²·K) and external temperature T∞=${h} K`),this.boundaryElements[o].forEach((([o,d])=>{if("linear"===this.elementOrder){let c,m,f,p,y;0===d?(c=s[0],m=0,f=0,p=3,y=2):1===d?(c=0,m=s[0],f=0,p=2,y=1):2===d?(c=s[0],m=1,f=1,p=4,y=2):3===d&&(c=1,m=s[0],f=2,p=4,y=1);let g=l.getBasisFunctions(c,m),b=g.basisFunction,E=g.basisFunctionDerivKsi,v=g.basisFunctionDerivEta,M=0,$=0,x=0,C=0;const F=this.nop[o].length;for(let e=0;e<F;e++){const t=this.nop[o][e]-1;0===d||2===d?(M+=r[t]*E[e],$+=a[t]*E[e]):1!==d&&3!==d||(x+=r[t]*v[e],C+=a[t]*v[e])}let A;A=0===d||2===d?Math.sqrt(M**2+$**2):Math.sqrt(x**2+C**2);for(let s=f;s<p;s+=y){let r=this.nop[o][s]-1;n(`  - Applied convection boundary condition to node ${r+1} (element ${o+1}, local node ${s+1})`),e[r]+=-i[0]*A*b[s]*u*h;for(let e=f;e<p;e+=y){let n=this.nop[o][e]-1;t[r][n]+=-i[0]*A*b[s]*b[e]*u}}}else if("quadratic"===this.elementOrder)for(let c=0;c<3;c++){let m,f,p,y,g;0===d?(m=s[c],f=0,p=0,y=7,g=3):1===d?(m=0,f=s[c],p=0,y=3,g=1):2===d?(m=s[c],f=1,p=2,y=9,g=3):3===d&&(m=1,f=s[c],p=6,y=9,g=1);let b=l.getBasisFunctions(m,f),E=b.basisFunction,v=b.basisFunctionDerivKsi,M=b.basisFunctionDerivEta,$=0,x=0,C=0,F=0;const A=this.nop[o].length;for(let e=0;e<A;e++){const t=this.nop[o][e]-1;0===d||2===d?($+=r[t]*v[e],x+=a[t]*v[e]):1!==d&&3!==d||(C+=r[t]*M[e],F+=a[t]*M[e])}let w;w=0===d||2===d?Math.sqrt($**2+x**2):Math.sqrt(C**2+F**2);for(let s=p;s<y;s+=g){let r=this.nop[o][s]-1;n(`  - Applied convection boundary condition to node ${r+1} (element ${o+1}, local node ${s+1})`),e[r]+=-i[c]*w*E[s]*u*h;for(let e=p;e<y;e+=g){let n=this.nop[o][e]-1;t[r][n]+=-i[c]*w*E[s]*E[e]*u}}}}))}}))}}function b(e,t){return function(e,t){(function(e){const{meshDimension:t,numElementsX:n,numElementsY:o,maxX:s,maxY:i,elementOrder:r,parsedMesh:a}=e;$.nex=n,$.ney=o,$.xorigin=0,$.yorigin=0,$.xlast=s,$.ylast=i,$.deltax=($.xlast-$.xorigin)/$.nex,$.deltay=($.ylast-$.yorigin)/$.ney})(e),function(){$.ne=$.nex*$.ney,$.nnx=2*$.nex+1,$.nny=2*$.ney+1,$.np=$.nnx*$.nny;let e=0;for(let t=1;t<=$.nex;t++)for(let n=1;n<=$.ney;n++){e++;for(let o=1;o<=3;o++){let s=3*o-2;$.nop[e-1][s-1]=$.nny*(2*t+o-3)+2*n-1,$.nop[e-1][s]=$.nop[e-1][s-1]+1,$.nop[e-1][s+1]=$.nop[e-1][s-1]+2}}}(),function(){$.xpt[0]=$.xorigin,$.ypt[0]=$.yorigin;for(let e=1;e<=$.nnx;e++){let t=(e-1)*$.nny;$.xpt[t]=$.xpt[0]+(e-1)*$.deltax/2,$.ypt[t]=$.ypt[0];for(let e=2;e<=$.nny;e++)$.xpt[t+e-1]=$.xpt[t],$.ypt[t+e-1]=$.ypt[t]+(e-1)*$.deltay/2}}();for(let e=0;e<$.np;e++)$.ncod[e]=0,$.bc[e]=0;Object.keys(t).forEach((e=>{if("constantTemp"===t[e][0]){const n=t[e][1];switch(e){case"0":for(let e=0;e<$.nnx;e++){const t=e*$.nny;$.ncod[t]=1,$.bc[t]=n}break;case"1":for(let e=0;e<$.nny;e++)$.ncod[e]=1,$.bc[e]=n;break;case"2":for(let e=0;e<$.nnx;e++){const t=e*$.nny+($.nny-1);$.ncod[t]=1,$.bc[t]=n}break;case"3":for(let e=0;e<$.nny;e++){const t=($.nnx-1)*$.nny+e;$.ncod[t]=1,$.bc[t]=n}}}}));for(let e=0;e<$.ne;e++)$.ntop[e]=0,$.nlat[e]=0;for(let e=0;e<$.np;e++)$.r1[e]=0;C.npt=$.np,C.iwr1=0,C.ntra=1,C.det=1;for(let e=0;e<$.ne;e++)C.nbn[e]=9;!function(){let e,t=Array(9).fill(0),o=Array(9).fill(0),i=Array(M).fill(0),r=Array(M).fill(0),a=Array(M).fill(0),l=Array(M).fill(0),d=Array(M).fill(0),c=Array(M).fill().map((()=>Array(M).fill(0))),u=Array(v).fill(0),h=Array(v).fill(0),m=Array(v).fill(0),f=1;C.iwr1++;let p=1,y=1;F.nell=0;for(let e=0;e<C.npt;e++)u[e]=0,h[e]=0;if(0!==C.ntra){for(let e=0;e<C.npt;e++)m[e]=0;for(let e=0;e<$.ne;e++){let t=$.ne-e-1;for(let e=0;e<C.nbn[t];e++){let n=$.nop[t][e];0===m[n-1]&&(m[n-1]=1,$.nop[t][e]=-$.nop[t][e])}}}C.ntra=0;let g=0,b=0;for(let e=0;e<M;e++)for(let t=0;t<M;t++)c[t][e]=0;for(;;){F.nell++,D();let m=F.nell,E=C.nbn[m-1],v=C.nbn[m-1];for(let e=0;e<v;e++){let n,s,r=$.nop[m-1][e];if(0===g)g++,t[e]=g,A.lhed[g-1]=r;else{for(n=0;n<g&&Math.abs(r)!==Math.abs(A.lhed[n]);n++);n===g?(g++,t[e]=g,A.lhed[g-1]=r):(t[e]=n+1,A.lhed[n]=r)}if(0===b)b++,o[e]=b,i[b-1]=r;else{for(s=0;s<b&&Math.abs(r)!==Math.abs(i[s]);s++);s===b?(b++,o[e]=b,i[b-1]=r):(o[e]=s+1,i[s]=r)}}if(b>M||g>M)return void s("Error: nmax-nsum not large enough");for(let e=0;e<v;e++){let n=t[e];for(let t=0;t<E;t++){c[o[t]-1][n-1]+=F.estifm[t][e]}}let x=0;for(let e=0;e<g;e++)A.lhed[e]<0&&(a[x]=e+1,x++);let w=0,S=0;for(let e=0;e<b;e++){let t=i[e];if(t<0){r[S]=e+1,S++;let n=Math.abs(t);1===$.ncod[n-1]&&(l[w]=e+1,w++,$.ncod[n-1]=2,$.r1[n-1]=$.bc[n-1])}}if(w>0)for(let e=0;e<w;e++){let t=l[e]-1,n=Math.abs(i[t]);for(let e=0;e<g;e++){c[t][e]=0,Math.abs(A.lhed[e])===n&&(c[t][e]=1)}}if(x>y||F.nell<$.ne){if(0===x)return void s("Error: no more rows fully summed");let t=r[0],o=a[0],l=c[t-1][o-1];if(Math.abs(l)<1e-4){l=0;for(let e=0;e<x;e++){let n=a[e];for(let e=0;e<S;e++){let s=r[e],i=c[s-1][n-1];Math.abs(i)>Math.abs(l)&&(l=i,o=n,t=s)}}}let m=Math.abs(i[t-1]);e=Math.abs(A.lhed[o-1]);let y=m+e+u[m-1]+h[e-1];C.det=C.det*l*(-1)**y/Math.abs(l);for(let t=0;t<C.npt;t++)t>=m&&u[t]--,t>=e&&h[t]--;if(Math.abs(l)<1e-10&&s(`Warning: matrix singular or ill-conditioned, nell=${F.nell}, kro=${m}, lco=${e}, pivot=${l}`),0===l)return;for(let e=0;e<g;e++)A.qq[e]=c[t-1][e]/l;let E=$.r1[m-1]/l;if($.r1[m-1]=E,d[t-1]=l,t>1)for(let e=0;e<t-1;e++){let t=Math.abs(i[e]),n=c[e][o-1];if(d[e]=n,o>1&&0!==n)for(let t=0;t<o-1;t++)c[e][t]-=n*A.qq[t];if(o<g)for(let t=o;t<g;t++)c[e][t-1]=c[e][t]-n*A.qq[t];$.r1[t-1]-=n*E}if(t<b)for(let e=t;e<b;e++){let t=Math.abs(i[e]),n=c[e][o-1];if(d[e]=n,o>1)for(let t=0;t<o-1;t++)c[e-1][t]=c[e][t]-n*A.qq[t];if(o<g)for(let t=o;t<g;t++)c[e-1][t-1]=c[e][t]-n*A.qq[t];$.r1[t-1]-=n*E}for(let e=0;e<b;e++)A.ecpiv[p+e-1]=d[e];p+=b;for(let e=0;e<b;e++)A.ecpiv[p+e-1]=i[e];p+=b,A.ecpiv[p-1]=t,p++;for(let e=0;e<g;e++)A.ecv[f-1+e]=A.qq[e];f+=g;for(let e=0;e<g;e++)A.ecv[f-1+e]=A.lhed[e];f+=g,A.ecv[f-1]=m,A.ecv[f]=g,A.ecv[f+1]=o,A.ecv[f+2]=l,f+=4;for(let e=0;e<b;e++)c[e][g-1]=0;for(let e=0;e<g;e++)c[b-1][e]=0;if(g--,o<g+1)for(let e=o-1;e<g;e++)A.lhed[e]=A.lhed[e+1];if(b--,t<b+1)for(let e=t-1;e<b;e++)i[e]=i[e+1];if(b>1||F.nell<$.ne)continue;if(e=Math.abs(A.lhed[0]),t=1,l=c[0][0],m=Math.abs(i[0]),o=1,y=m+e+u[m-1]+h[e-1],C.det=C.det*l*(-1)**y/Math.abs(l),A.qq[0]=1,Math.abs(l)<1e-10&&s(`Warning: matrix singular or ill-conditioned, nell=${F.nell}, kro=${m}, lco=${e}, pivot=${l}`),0===l)return;$.r1[m-1]=$.r1[m-1]/l,A.ecv[f-1]=A.qq[0],f++,A.ecv[f-1]=A.lhed[0],f++,A.ecv[f-1]=m,A.ecv[f]=g,A.ecv[f+1]=o,A.ecv[f+2]=l,f+=4,A.ecpiv[p-1]=d[0],p++,A.ecpiv[p-1]=i[0],p++,A.ecpiv[p-1]=t,p++,C.ice1=f,1===C.iwr1&&n(`total ecs transfer in matrix reduction=${f}`),N(f);break}}}();for(let e=0;e<$.np;e++)$.u[e]=C.sk[e];for(let e=0;e<$.np;e++)n(`${$.xpt[e].toExponential(5)}  ${$.ypt[e].toExponential(5)}  ${$.u[e].toExponential(5)}`)}(e,t),{solutionVector:$.u.slice(0,$.np),nodesCoordinates:{nodesXCoordinates:$.xpt.slice(0,$.np),nodesYCoordinates:$.ypt.slice(0,$.np)}}}const E=1600,v=6724,M=2e3,$={nex:0,ney:0,nnx:0,nny:0,ne:0,np:0,xorigin:0,yorigin:0,xlast:0,ylast:0,deltax:0,deltay:0,nop:Array(E).fill().map((()=>Array(9).fill(0))),xpt:Array(v).fill(0),ypt:Array(v).fill(0),ncod:Array(v).fill(0),bc:Array(v).fill(0),r1:Array(v).fill(0),u:Array(v).fill(0),ntop:Array(E).fill(0),nlat:Array(E).fill(0)},x={w:[.27777777777778,.444444444444,.27777777777778],gp:[.1127016654,.5,.8872983346]},C={iwr1:0,npt:0,ntra:0,nbn:Array(E).fill(0),det:1,sk:Array(M*M).fill(0),ice1:0},F={estifm:Array(9).fill().map((()=>Array(9).fill(0))),nell:0},A={ecv:Array(2e6).fill(0),lhed:Array(M).fill(0),qq:Array(M).fill(0),ecpiv:Array(2e6).fill(0)},w=new a({meshDimension:"2D",elementOrder:"quadratic"});function D(){const e=F.nell-1,{estifm:t,localLoad:n,ngl:o}=function({elementIndex:e,nop:t,xCoordinates:n,yCoordinates:o,basisFunctions:s,gaussPoints:i,gaussWeights:r,ntopFlag:a=!1,nlatFlag:l=!1,convectionTop:d={active:!1,coeff:0,extTemp:0}}){const c=Array(9).fill().map((()=>Array(9).fill(0))),u=Array(9).fill(0),h=Array(9);for(let n=0;n<9;n++)h[n]=Math.abs(t[e][n]);for(let e=0;e<i.length;e++)for(let t=0;t<i.length;t++){const{basisFunction:a,basisFunctionDerivKsi:l,basisFunctionDerivEta:d}=s.getBasisFunctions(i[e],i[t]),u=h.map((e=>e-1)),{detJacobian:m,basisFunctionDerivX:p,basisFunctionDerivY:y}=f({basisFunction:a,basisFunctionDerivKsi:l,basisFunctionDerivEta:d,nodesXCoordinates:n,nodesYCoordinates:o,localToGlobalMap:u,numNodes:9});for(let n=0;n<9;n++)for(let o=0;o<9;o++)c[n][o]-=r[e]*r[t]*m*(p[n]*p[o]+y[n]*y[o])}if(a&&d.active){const a=d.coeff,l=d.extTemp;for(let d=0;d<i.length;d++){const h=i[d],{basisFunction:m,basisFunctionDerivKsi:f}=s.getBasisFunctions(h,1);let p=0,y=0;const g=[2,5,8];for(let s=0;s<9;s++){const i=t[e][s]-1;p+=n[i]*f[s],y+=o[i]*f[s]}const b=Math.sqrt(p*p+y*y);for(const e of g){for(const t of g)c[e][t]-=r[d]*b*a*m[e]*m[t];u[e]-=r[d]*b*a*l*m[e]}}}else a&&d.active;return{estifm:c,localLoad:u,ngl:h}}({elementIndex:e,nop:$.nop,xCoordinates:$.xpt,yCoordinates:$.ypt,basisFunctions:w,gaussPoints:x.gp,gaussWeights:x.w,ntopFlag:1===$.ntop[e],nlatFlag:1===$.nlat[e]});for(let e=0;e<9;e++)for(let n=0;n<9;n++)F.estifm[e][n]=t[e][n];for(let e=0;e<9;e++){const t=o[e]-1;$.r1[t]+=n[e]}}function N(e){for(let e=0;e<C.npt;e++)C.sk[e]=$.bc[e];for(let t=1;t<=C.npt;t++){e-=4;let n=A.ecv[e-1],o=A.ecv[e],s=A.ecv[e+1];if(A.ecv[e+2],1===t)e--,A.lhed[0]=A.ecv[e-1],e--,A.qq[0]=A.ecv[e-1];else{e-=o;for(let t=0;t<o;t++)A.lhed[t]=A.ecv[e-1+t];e-=o;for(let t=0;t<o;t++)A.qq[t]=A.ecv[e-1+t]}let i=Math.abs(A.lhed[s-1]);if($.ncod[i-1]>0)continue;let r=0;A.qq[s-1]=0;for(let e=0;e<o;e++)r-=A.qq[e]*C.sk[Math.abs(A.lhed[e])-1];C.sk[i-1]=r+$.r1[n-1],$.ncod[i-1]=1}1===C.iwr1&&n(`value of ice after backsubstitution=${e}`)}
/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
const S=Symbol("Comlink.proxy"),O=Symbol("Comlink.endpoint"),X=Symbol("Comlink.releaseProxy"),k=Symbol("Comlink.finalizer"),T=Symbol("Comlink.thrown"),q=e=>"object"==typeof e&&null!==e||"function"==typeof e,Y=new Map([["proxy",{canHandle:e=>q(e)&&e[S],serialize(e){const{port1:t,port2:n}=new MessageChannel;return P(e,t),[n,[n]]},deserialize:e=>(e.start(),W(e))}],["throw",{canHandle:e=>q(e)&&T in e,serialize({value:e}){let t;return t=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[t,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}}]]);function P(e,t=globalThis,n=["*"]){t.addEventListener("message",(function o(s){if(!s||!s.data)return;if(!function(e,t){for(const n of e){if(t===n||"*"===n)return!0;if(n instanceof RegExp&&n.test(t))return!0}return!1}(n,s.origin))return void console.warn(`Invalid origin '${s.origin}' for comlink proxy`);const{id:i,type:r,path:a}=Object.assign({path:[]},s.data),l=(s.data.argumentList||[]).map(U);let d;try{const t=a.slice(0,-1).reduce(((e,t)=>e[t]),e),n=a.reduce(((e,t)=>e[t]),e);switch(r){case"GET":d=n;break;case"SET":t[a.slice(-1)[0]]=U(s.data.value),d=!0;break;case"APPLY":d=n.apply(t,l);break;case"CONSTRUCT":d=function(e){return Object.assign(e,{[S]:!0})}(new n(...l));break;case"ENDPOINT":{const{port1:t,port2:n}=new MessageChannel;P(e,n),d=function(e,t){return K.set(e,t),e}(t,[t])}break;case"RELEASE":d=void 0;break;default:return}}catch(e){d={value:e,[T]:0}}Promise.resolve(d).catch((e=>({value:e,[T]:0}))).then((n=>{const[s,a]=J(n);t.postMessage(Object.assign(Object.assign({},s),{id:i}),a),"RELEASE"===r&&(t.removeEventListener("message",o),R(t),k in e&&"function"==typeof e[k]&&e[k]())})).catch((e=>{const[n,o]=J({value:new TypeError("Unserializable return value"),[T]:0});t.postMessage(Object.assign(Object.assign({},n),{id:i}),o)}))})),t.start&&t.start()}function R(e){(function(e){return"MessagePort"===e.constructor.name})(e)&&e.close()}function W(e,t){const n=new Map;return e.addEventListener("message",(function(e){const{data:t}=e;if(!t||!t.id)return;const o=n.get(t.id);if(o)try{o(t)}finally{n.delete(t.id)}})),G(e,n,[],t)}function I(e){if(e)throw new Error("Proxy has been released and is not useable")}function j(e){return z(e,new Map,{type:"RELEASE"}).then((()=>{R(e)}))}const B=new WeakMap,V="FinalizationRegistry"in globalThis&&new FinalizationRegistry((e=>{const t=(B.get(e)||0)-1;B.set(e,t),0===t&&j(e)}));function G(e,t,n=[],o=function(){}){let s=!1;const i=new Proxy(o,{get(o,r){if(I(s),r===X)return()=>{!function(e){V&&V.unregister(e)}(i),j(e),t.clear(),s=!0};if("then"===r){if(0===n.length)return{then:()=>i};const o=z(e,t,{type:"GET",path:n.map((e=>e.toString()))}).then(U);return o.then.bind(o)}return G(e,t,[...n,r])},set(o,i,r){I(s);const[a,l]=J(r);return z(e,t,{type:"SET",path:[...n,i].map((e=>e.toString())),value:a},l).then(U)},apply(o,i,r){I(s);const a=n[n.length-1];if(a===O)return z(e,t,{type:"ENDPOINT"}).then(U);if("bind"===a)return G(e,t,n.slice(0,-1));const[l,d]=L(r);return z(e,t,{type:"APPLY",path:n.map((e=>e.toString())),argumentList:l},d).then(U)},construct(o,i){I(s);const[r,a]=L(i);return z(e,t,{type:"CONSTRUCT",path:n.map((e=>e.toString())),argumentList:r},a).then(U)}});return function(e,t){const n=(B.get(t)||0)+1;B.set(t,n),V&&V.register(e,t,e)}(i,e),i}function L(e){const t=e.map(J);return[t.map((e=>e[0])),(n=t.map((e=>e[1])),Array.prototype.concat.apply([],n))];var n}const K=new WeakMap;function J(e){for(const[t,n]of Y)if(n.canHandle(e)){const[o,s]=n.serialize(e);return[{type:"HANDLER",name:t,value:o},s]}return[{type:"RAW",value:e},K.get(e)||[]]}function U(e){switch(e.type){case"HANDLER":return Y.get(e.name).deserialize(e.value);case"RAW":return e.value}}function z(e,t,n,o){return new Promise((s=>{const i=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-");t.set(i,s),e.start&&e.start(),e.postMessage(Object.assign({id:i},n),o)}))}exports.FEAScriptModel=class{constructor(){this.solverConfig=null,this.meshConfig={},this.boundaryConditions={},this.solverMethod="lusolve",o("FEAScriptModel instance created")}setSolverConfig(e){this.solverConfig=e,n(`Solver config set to: ${e}`)}setMeshConfig(e){this.meshConfig=e,n(`Mesh config set with dimensions: ${e.meshDimension}`)}addBoundaryCondition(e,t){this.boundaryConditions[e]=t,n(`Boundary condition added for boundary: ${e}, type: ${t[0]}`)}setSolverMethod(e){this.solverMethod=e,n(`Solver method set to: ${e}`)}solve(){if(!this.solverConfig||!this.meshConfig||!this.boundaryConditions){const e="Solver config, mesh config, and boundary conditions must be set before solving.";throw console.error(e),new Error(e)}let e=[],t=[],a=[],l=[];o("Preparing mesh...");const u=function(e){const{meshDimension:t,numElementsX:o,numElementsY:i,maxX:r,maxY:a,elementOrder:l,parsedMesh:u}=e;let h;"1D"===t?h=new d({numElementsX:o,maxX:r,elementOrder:l,parsedMesh:u}):"2D"===t?h=new c({numElementsX:o,maxX:r,numElementsY:i,maxY:a,elementOrder:l,parsedMesh:u}):s("Mesh dimension must be either '1D' or '2D'.");const m=h.boundaryElementsProcessed?h.parsedMesh:h.generateMesh();let f,p,y=m.nodesXCoordinates,g=m.nodesYCoordinates,b=m.totalNodesX,E=m.totalNodesY,v=m.nodalNumbering,M=m.boundaryElements;return null!=u?(f=v.length,p=y.length,n(`Using parsed mesh with ${f} elements and ${p} nodes`)):(f=o*("2D"===t?i:1),p=b*("2D"===t?E:1),n(`Using mesh generated from geometry with ${f} elements and ${p} nodes`)),{nodesXCoordinates:y,nodesYCoordinates:g,totalNodesX:b,totalNodesY:E,nop:v,boundaryElements:M,totalElements:f,totalNodes:p,meshDimension:t,elementOrder:l}}(this.meshConfig);o("Mesh preparation completed");const p={nodesXCoordinates:u.nodesXCoordinates,nodesYCoordinates:u.nodesYCoordinates};if(o("Beginning solving process..."),console.time("totalSolvingTime"),"solidHeatTransferScript"===this.solverConfig)if(o(`Using solver: ${this.solverConfig}`),"frontal"===this.solverMethod){o("Using frontal solver method");a=b(this.meshConfig,this.boundaryConditions).solutionVector}else{({jacobianMatrix:e,residualVector:t}=function(e,t){o("Starting solid heat transfer matrix assembly...");const{nodesXCoordinates:s,nodesYCoordinates:i,nop:r,boundaryElements:a,totalElements:l,meshDimension:d,elementOrder:c}=e,u=h(e),{residualVector:p,jacobianMatrix:y,localToGlobalMap:b,basisFunctions:E,gaussPoints:v,gaussWeights:M,numNodes:$}=u;for(let e=0;e<l;e++){for(let t=0;t<$;t++)b[t]=r[e][t]-1;for(let e=0;e<v.length;e++)if("1D"===d){let t=E.getBasisFunctions(v[e]);const n=m({basisFunction:t.basisFunction,basisFunctionDerivKsi:t.basisFunctionDerivKsi,nodesXCoordinates:s,localToGlobalMap:b,numNodes:$}),{detJacobian:o,basisFunctionDerivX:i}=n;for(let t=0;t<$;t++){let n=b[t];for(let s=0;s<$;s++){let r=b[s];y[n][r]+=-M[e]*o*(i[t]*i[s])}}}else if("2D"===d)for(let t=0;t<v.length;t++){let n=E.getBasisFunctions(v[e],v[t]);const o=f({basisFunction:n.basisFunction,basisFunctionDerivKsi:n.basisFunctionDerivKsi,basisFunctionDerivEta:n.basisFunctionDerivEta,nodesXCoordinates:s,nodesYCoordinates:i,localToGlobalMap:b,numNodes:$}),{detJacobian:r,basisFunctionDerivX:a,basisFunctionDerivY:l}=o;for(let n=0;n<$;n++){let o=b[n];for(let s=0;s<$;s++){let i=b[s];y[o][i]+=-M[e]*M[t]*r*(a[n]*a[s]+l[n]*l[s])}}}}o("Applying thermal boundary conditions...");const x=new g(t,a,r,d,c);x.imposeConvectionBoundaryConditions(p,y,v,M,s,i,E),o("Convection boundary conditions applied"),x.imposeConstantTempBoundaryConditions(p,y),o("Constant temperature boundary conditions applied"),n("Residuals at each node:");for(let e=0;e<p.length;e++)n(`Node ${e}: ${p[e].toExponential(6)}`);return o("Solid heat transfer matrix assembly completed"),{jacobianMatrix:y,residualVector:p}}(u,this.boundaryConditions));a=i(this.solverMethod,e,t).solutionVector}else if("frontPropagationScript"===this.solverConfig){o(`Using solver: ${this.solverConfig}`);let n=0;const s=5,i={meshData:u,boundaryConditions:this.boundaryConditions,eikonalActivationFlag:n,solverMethod:this.solverMethod,initialSolution:l};for(;n<=1;){i.eikonalActivationFlag=n,a.length>0&&(i.initialSolution=[...a]);const o=r(y,i,100,1e-4);e=o.jacobianMatrix,t=o.residualVector,a=o.solutionVector,n+=1/s}}return console.timeEnd("totalSolvingTime"),o("Solving process completed"),{solutionVector:a,nodesCoordinates:p}}},exports.FEAScriptWorker=class{constructor(){this.worker=null,this.feaWorker=null,this.isReady=!1,this._initWorker()}async _initWorker(){try{this.worker=new Worker(new URL("./wrapperScript.js","undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&"SCRIPT"===document.currentScript.tagName.toUpperCase()&&document.currentScript.src||new URL("feascript.cjs.js",document.baseURI).href),{type:"module"}),this.worker.onerror=e=>{console.error("FEAScriptWorker: Worker error:",e)};const e=W(this.worker);this.feaWorker=await new e,this.isReady=!0}catch(e){throw console.error("Failed to initialize worker",e),e}}async _ensureReady(){return this.isReady?Promise.resolve():new Promise(((e,t)=>{let n=0;const o=()=>{n++,this.isReady?e():n>=50?t(new Error("Timeout waiting for worker to be ready")):setTimeout(o,1e3)};o()}))}async setSolverConfig(e){return await this._ensureReady(),o(`FEAScriptWorker: Setting solver config to: ${e}`),this.feaWorker.setSolverConfig(e)}async setMeshConfig(e){return await this._ensureReady(),o("FEAScriptWorker: Setting mesh config"),this.feaWorker.setMeshConfig(e)}async addBoundaryCondition(e,t){return await this._ensureReady(),o(`FEAScriptWorker: Adding boundary condition for boundary: ${e}`),this.feaWorker.addBoundaryCondition(e,t)}async setSolverMethod(e){return await this._ensureReady(),o(`FEAScriptWorker: Setting solver method to: ${e}`),this.feaWorker.setSolverMethod(e)}async solve(){await this._ensureReady(),o("FEAScriptWorker: Requesting solution from worker...");const e=performance.now(),t=await this.feaWorker.solve();return o(`FEAScriptWorker: Solution completed in ${((performance.now()-e)/1e3).toFixed(2)}s`),t}async getModelInfo(){return await this._ensureReady(),this.feaWorker.getModelInfo()}async ping(){return await this._ensureReady(),this.feaWorker.ping()}terminate(){this.worker&&(this.worker.terminate(),this.worker=null,this.feaWorker=null,this.isReady=!1)}},exports.VERSION="0.1.3",exports.importGmshQuadTri=async e=>{let t={nodesXCoordinates:[],nodesYCoordinates:[],nodalNumbering:{quadElements:[],triangleElements:[]},boundaryElements:[],boundaryConditions:[],boundaryNodePairs:{},gmshV:0,ascii:!1,fltBytes:"8",totalNodesX:0,totalNodesY:0,physicalPropMap:[],elementTypes:{}},o=(await e.text()).split("\n").map((e=>e.trim())).filter((e=>""!==e&&" "!==e)),s="",i=0,r=0,a=0,l=0,d={numNodes:0},c=0,u=[],h=0,m=0,f=0,p={dim:0,tag:0,elementType:0,numElements:0},y=0,g={};for(;i<o.length;){const e=o[i];if("$MeshFormat"===e){s="meshFormat",i++;continue}if("$EndMeshFormat"===e){s="",i++;continue}if("$PhysicalNames"===e){s="physicalNames",i++;continue}if("$EndPhysicalNames"===e){s="",i++;continue}if("$Entities"===e){s="entities",i++;continue}if("$EndEntities"===e){s="",i++;continue}if("$Nodes"===e){s="nodes",i++;continue}if("$EndNodes"===e){s="",i++;continue}if("$Elements"===e){s="elements",i++;continue}if("$EndElements"===e){s="",i++;continue}const n=e.split(/\s+/).filter((e=>""!==e));if("meshFormat"===s)t.gmshV=parseFloat(n[0]),t.ascii="0"===n[1],t.fltBytes=n[2];else if("physicalNames"===s){if(n.length>=3){if(!/^\d+$/.test(n[0])){i++;continue}const e=parseInt(n[0],10),o=parseInt(n[1],10);let s=n.slice(2).join(" ");s=s.replace(/^"|"$/g,""),t.physicalPropMap.push({tag:o,dimension:e,name:s})}}else if("nodes"===s){if(0===r){r=parseInt(n[0],10),a=parseInt(n[1],10),t.nodesXCoordinates=new Array(a).fill(0),t.nodesYCoordinates=new Array(a).fill(0),i++;continue}if(l<r&&0===d.numNodes){d={dim:parseInt(n[0],10),tag:parseInt(n[1],10),parametric:parseInt(n[2],10),numNodes:parseInt(n[3],10)},u=[],c=0,h=0,i++;continue}if(c<d.numNodes){for(let e=0;e<n.length&&c<d.numNodes;e++)u.push(parseInt(n[e],10)),c++;if(c<d.numNodes){i++;continue}i++;continue}if(h<d.numNodes){const e=u[h]-1,o=parseFloat(n[0]),s=parseFloat(n[1]);t.nodesXCoordinates[e]=o,t.nodesYCoordinates[e]=s,t.totalNodesX++,t.totalNodesY++,h++,h===d.numNodes&&(l++,d={numNodes:0})}}else if("elements"===s){if(0===m){m=parseInt(n[0],10),parseInt(n[1],10),i++;continue}if(f<m&&0===p.numElements){p={dim:parseInt(n[0],10),tag:parseInt(n[1],10),elementType:parseInt(n[2],10),numElements:parseInt(n[3],10)},t.elementTypes[p.elementType]=(t.elementTypes[p.elementType]||0)+p.numElements,y=0,i++;continue}if(y<p.numElements){parseInt(n[0],10);const e=n.slice(1).map((e=>parseInt(e,10)));if(1===p.elementType||8===p.elementType){const n=p.tag;g[n]||(g[n]=[]),g[n].push(e),t.boundaryNodePairs[n]||(t.boundaryNodePairs[n]=[]),t.boundaryNodePairs[n].push(e)}else 2===p.elementType?t.nodalNumbering.triangleElements.push(e):(3===p.elementType||10===p.elementType)&&t.nodalNumbering.quadElements.push(e);y++,y===p.numElements&&(f++,p={numElements:0})}}i++}return t.physicalPropMap.forEach((e=>{if(1===e.dimension){const n=g[e.tag]||[];n.length>0&&t.boundaryConditions.push({name:e.name,tag:e.tag,nodes:n})}})),n(`Parsed boundary node pairs by physical tag: ${JSON.stringify(t.boundaryNodePairs)}. These pairs will be used to identify boundary elements in the mesh.`),t},exports.logSystem=function(e){"basic"!==e&&"debug"!==e?(console.log("%c[WARN] Invalid log level: "+e+". Using basic instead.","color: #FFC107; font-weight: bold;"),t="basic"):(t=e,o(`Log level set to: ${e}`))},exports.plotSolution=function(e,t,n,o,s,i,r="structured"){const{nodesXCoordinates:a,nodesYCoordinates:l}=t;if("1D"===o&&"line"===s){let t;t=e.length>0&&Array.isArray(e[0])?e.map((e=>e[0])):e;let o=Array.from(a),s={x:o,y:t,mode:"lines",type:"scatter",line:{color:"rgb(219, 64, 82)",width:2},name:"Solution"},r=Math.min(window.innerWidth,700),l=Math.max(...o),d=r/l,c={title:`line plot - ${n}`,width:Math.max(d*l,400),height:350,xaxis:{title:"x"},yaxis:{title:"Solution"},margin:{l:70,r:40,t:50,b:50}};Plotly.newPlot(i,[s],c,{responsive:!0})}else if("2D"===o&&"contour"===s){const t="structured"===r,o=new Set(a).size,d=new Set(l).size;let c;c=Array.isArray(e[0])?e.map((e=>e[0])):e;let u=Math.min(window.innerWidth,700),h=Math.max(...a),m=Math.max(...l)/h,f=Math.min(u,600),p={title:`${s} plot - ${n}`,width:f,height:f*m*.8,xaxis:{title:"x"},yaxis:{title:"y"},margin:{l:50,r:50,t:50,b:50},hovermode:"closest"};if(t){const t=o,n=d;math.reshape(Array.from(a),[t,n]);let s=math.reshape(Array.from(l),[t,n]),r=math.reshape(Array.from(e),[t,n]),c=math.transpose(r),u=[];for(let e=0;e<t*n;e+=n){let t=a[e];u.push(t)}let h={z:c,type:"contour",contours:{coloring:"heatmap",showlabels:!1},colorbar:{title:"Solution"},x:u,y:s[0],name:"Solution Field"};Plotly.newPlot(i,[h],p,{responsive:!0})}else{let e={x:a,y:l,z:c,type:"contour",contours:{coloring:"heatmap",showlabels:!1},colorbar:{title:"Solution"},name:"Solution Field"};Plotly.newPlot(i,[e],p,{responsive:!0})}}},exports.printVersion=async function(){o("Fetching latest FEAScript version information...");try{const e=await fetch("https://api.github.com/repos/FEAScript/FEAScript/commits/main"),t=await e.json(),n=new Date(t.commit.committer.date).toLocaleString();return o(`Latest FEAScript update: ${n}`),n}catch(e){return s("Failed to fetch version information: "+e),"Version information unavailable"}};
//# sourceMappingURL=feascript.cjs.js.map
